paths:
  /api/products:
    get:
      summary: Retorna una lista de productos
      tags:
        - Productos
      description: Este endpoint trae la lista de productos del ecommerce
      security:
        - BasicAuth: []
      responses:
        "200":
          description: JSON array de nombres de productos
          content:
            application/json:
              schema:
                type: object
                properties: 
                  result:
                    type: object
                    properties:
                      page: 
                        type: string
                        example: "1"
                      totalDocs:
                        type: string
                        example: "20"
                      totalPages:
                        type: string
                        example: "2"
                      limit:
                        type: string
                        example: "10"
                      hasNextPage:
                        type: string
                        example: "true"
                      hasPrevPage:
                        type: string
                        example: "false"
                      prevPage:
                        type: string
                        example: "null"
                      nextPage:
                        type: string
                        example: "2"
                      payload:
                        type: array
                        items: 
                          type: object
                          properties:
                            id:
                              type: string
                              example: "667ac9aea005ec71302d0e43"
                            title:
                              type: string
                              example: "Manzana"
                            description:
                              type: string
                              example: "Fruta roja"
                            price:
                              type: string
                              example: "1000"
                            thumbnail:
                              type: string
                              example: "[]"
                            code:
                              type: string
                              example: "1"
                            stock:
                              type: string
                              example: "1"
                            status:
                              type: string
                              example: "true"
                            category:
                              type: string
                              example: "Fruta"
                            __V:
                              type: string
                              example: "0"
        "400":
          description: "Request invalido"
          content:
            application/json:
              schema:
                oneOf: 
                  - $ref: "#/components/schemas/error1"
                  - $ref: "#/components/schemas/error2"
    post:
      summary: Crea un nuevo producto
      tags:
        - Productos
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: "#/components/requestBodies/createProduct"
      responses:
        "200":
          description: Producto agregado correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/producto"
        "400":
          description: "Request inválido"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/error1"
                  - $ref: "#/components/schemas/error2"
  /api/products/{id}:
    get:
      summary: Retorna un producto por ID
      tags:
        - Productos
      description: Este endpoint trae un producto específico del ecommerce por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del producto
      responses:
        "200":
          description: Información del producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  producto:
                    $ref: "#/components/schemas/producto" 
        "400":
          description: "Request invalido"
          content:
            application/json:
              schema:
                oneOf: 
                  - $ref: "#/components/schemas/error1"
                  - $ref: "#/components/schemas/error2"
    put:
      summary: Actualiza un producto por ID
      tags:
        - Productos
      description: Este endpoint actualiza un producto específico del ecommerce por ID
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: "#/components/requestBodies/actualizarProduct"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del producto
      responses:
        "200":
          description: Producto actualizado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Producto actualizado"
                  producto:
                    $ref: "#/components/schemas/producto" 
        "400":
          description: "Request invalido"
          content:
            application/json:
              schema:
                oneOf: 
                  - $ref: "#/components/schemas/error1"
                  - $ref: "#/components/schemas/error2"
    delete:
      summary: Borra un producto
      tags:
        - Productos
      description: Este endpoint borra un producto del ecommerce por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del producto
      responses:
        "200":
          description: Producto borrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Producto eliminado"
                  producto:
                    $ref: "#/components/schemas/producto"               
        "400":
          description: "Request invalido"
          content:
            application/json:
              schema:
                oneOf: 
                  - $ref: "#/components/schemas/error1"
                  - $ref: "#/components/schemas/error2"
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    producto:
      type: object
      properties:
        owner:
          type: string
          example: "admin"
        _id:
          type: string
          example: "667ac9aea005ec71302d0e43"
        title:
          type: string
          example: "Manzana"
        description:
          type: string
          example: "Fruta roja"
        price:
          type: string
          example: "1000"
        thumbnail:
          type: string
          example: "[]"
        code:
          type: string
          example: "1"
        stock:
          type: string
          example: "1"
        status:
          type: string
          example: "true"
        category:
          type: string
          example: "Fruta"
    error1:
      type: object
      properties:
        error:
          type: string
          description: "Complete email y password"
    error2:
      type: object
      properties:
        error:
          type: string
          description: "Argumentos inválidos"

  requestBodies:
    createProduct:
      type: object
      properties:
        title:
          type: string
          description: "Titulo del producto"
        description:
          type: string
          description: "descripcion del producto"
        price:
          type: string
          description: "Precio del producto"
        code:
          type: string
          description: "Codigo del producto"
        stock:
          type: string
          description: "Cantidad de stock del producto"
        category:
          type: string
          description: "Categoria del producto"
      example:
        title: Naranja
        description: Fruta naranja
        price: 200
        code: 120
        stock: 1000
        category: Fruta
    actualizarProduct:
      type: object
      properties:
        id:
          type: string
          description: "ID del producto"
        title:
          type: string
          description: "Titulo del producto"
        description:
          type: string
          description: "descripcion del producto"
        price:
          type: string
          description: "Precio del producto"
        thumbnails:
          type: string
          description: "Imagen del producto"
        code:
          type: string
          description: "Codigo del producto"
        stock:
          type: string
          description: "Cantidad de stock del producto"
        category:
          type: string
          description: "Categoria del producto"
        status:
          type: string
          description: "Status del producto"
      example:
        id: 5
        title: Naranja
        description: Fruta naranja
        price: 200
        thumbnails: []
        code: 120
        stock: 1000
        category: Fruta
        status: false

      