<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Carrito de Compras</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      margin: 0;
      padding: 0;
    }

    div {
      max-width: 800px;
      margin: 20px auto;
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    h3 {
      color: #333;
    }

    div > div {
      border-bottom: 1px solid #ccc;
      margin-bottom: 10px;
      padding-bottom: 10px;
    }

    h4 {
      color: #0066cc;
      margin-bottom: 5px;
    }

    p {
      margin: 0;
      color: #666;
    }
  </style>
</head>
<body>
  {{>header}}

  <h1>Carrito de Compras</h1>

  <div class="products-container">
    {{#each carrito.products}}
    <div>
      <div>
        <h5>Producto: {{this.id.title}}</h5>
        <p>Cantidad: {{this.quantity}}</p>
        <p>Precio: ${{this.id.price}}</p>
        <button onclick="eliminarProducto('{{../idCart}}', '{{this._id}}')">Eliminar</button>
      </div>
    </div>
    {{/each}}
  </div>

  <button onclick="vaciarCarrito('{{cid}}')">Vaciar Carrito</button>
  <button onclick="finalizarCompra('{{cid}}')">Finalizar Compra</button>
  <h3>Total de la compra: ${{totalCompra}}</h3>

  <script>
    function eliminarProducto(id) {
      fetch(`/api/carts/${cid}/product/${id}`, {
        method: 'DELETE'
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Error al eliminar el producto del carrito');
        }
        location.reload();
      })
      .catch(error => {
        console.error('Error:', error);
      });
    }

    function vaciarCarrito(cid) {
      fetch(`/api/carts/${cid}`, {
        method: 'DELETE'
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Error al vaciar el carrito');
        }
        location.reload();
      })
      .catch(error => {
        console.error('Error:', error);
      });
    }

    function finalizarCompra(idCart) {
      fetch(`/api/carts/${cid}/purchase`, {
        method: 'POST'
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Error al finalizar la compra');
        }
        return response.json();
      })
      .then(data => {
        if (data.productosNoDisponibles && data.productosNoDisponibles.length > 0) {
          alert('Algunos productos no pudieron comprarse debido a falta de stock.');
        } else {
          alert('Compra finalizada con Ã©xito.');
          window.location.href = `/checkout/${data.ticketId}`;
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Error al finalizar la compra');
      });
    }
  </script>
</body>
</html>












 